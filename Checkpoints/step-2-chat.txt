    // useState initialization
    const [value, setValue] = useState('');
    const [posts, setPosts] = useState([]);
    const isSubscribed = useRef(false);

    // fetch Posts function
    const fetchPosts = async () => {
         const response = await fetch('http:localhost:3000/api/posts');
         const data = await response.json();
         setPosts(data.items);
    };

    // submit Post function
    const submitPost = async () => {
         const response = await fetch('http:localhost:3000/api/posts', {
             method: 'POST',
             headers: {
                 'Content-Type': 'application/json',
             },
             body: JSON.stringify({
                 content: value,
                 likes: 0,
                 user: userStore.id,
             }),
         });
         setValue('');
     };
    
    // useEffect for Fetching Messages
     useEffect(() => {
         fetchPosts();
     }, []);


                     //styling
                     <button className='btn-purple btn-medium grow'>
                         <Icon name='check' />
                         <span>Start Chat</span>
                     </button>
                    //styling
                     <button className='btn-purple btn-medium btn-square shrink-0 '>
                         <Icon name='email' />
                     </button>
                     //styling
                     <button
                         className='btn-purple btn-medium btn-square'
                         onClick={() => {
                             pb.realtime.unsubscribe();
                             pb.authStore.clear();
                             router.push('/');
                         }}
                     >
                         <Icon name='arrow-up-right' />
                     </button>
                 </div>

                 {/* CHAT INPUT */}
                 <div className='flex lg:flex-col-reverse'>
                     <div className='flex-grow mr-30'>
                     {/* Comment section  */}
                         <Comment
                             className='mb-6'
                             avatar='/images/avatars/avatar.jpeg'
                             placeholder='Type to add something'
                             value={value}
                             setValue={(e) => setValue(e.target.value)}
                             posts={posts}
                             submitFunc={submitPost}
                         />
                     </div>
                 </div>


